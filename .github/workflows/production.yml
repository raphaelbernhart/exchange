name: Build, Test & Deploy Production

on:
  push:
    branches: [ master ]

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      # Get current package.json Version
      - name: Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.1.0
        
      - name: Build Docker Image
        id: build-image
        run: docker build -t registry.raphaelbernhart.at/raphaelbernhart/exchange:${{ steps.package-version.outputs.current-version}} .
        env:
          NODE_ENV: production
          PORT: 80
          MAX_FILE_SIZE: 100000000
          EXPIRATION_TIME: 7
          EXPIRATION_WORKER_INTERVAL: 6
          API_URL: https://ec.raphaelbernhart.at/upload/
  
  push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        
      # Get current package.json Version
      - name: Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.1.0
        
      - name: Build Docker Image
        id: build-image
        run: docker build -t registry.raphaelbernhart.at/raphaelbernhart/exchange:${{ steps.package-version.outputs.current-version}} .
        env:
          NODE_ENV: production
          PORT: 80
          MAX_FILE_SIZE: 100000000
          EXPIRATION_TIME: 7
          EXPIRATION_WORKER_INTERVAL: 6
          API_URL: https://ec.raphaelbernhart.at/upload/

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        
      - name: Push Image
        run: docker push registry.raphaelbernhart.at/raphaelbernhart/exchange:${{ steps.package-version.outputs.current-version}}

  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        
        # Get current package.json Version
      - name: Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.1.0
        
      - uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{secrets.KUBECONFIG}}
      
      - uses: Azure/k8s-deploy@v1.3
        with:
          namespace: personal
          manifests: |
              ./kube/manifest.yml
          images: 'raphy02/exchange:${{ steps.package-version.outputs.current-version}}'
